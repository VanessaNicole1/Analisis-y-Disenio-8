%PATIÑO

@inproceedings{Sedelmaier2017,
abstract = {Requirements are of paramount importance for the quality of software systems. Yet, requirements engineering education at universities is surprisingly hard. University students encounter difficulties in understanding the role of requirements and applying relevant methods to deal with requirements appropriately. One potential cause may be a lack of authenticity, i.e. settings that are too artificial to mirror the complexity of real-world situations adequately. This paper presents an innovative and integrated didactical approach for teaching requirements engineering that was devised in a goaland competence-oriented manner to avoid some of these shortcomings, in particular by including requirements elicitation with real customers into an integrated didactic step-by-step approach. Obviously, requirements engineering education is far more than assembling technical knowledge. Rather, it involves many non-technical skills that obtain a specific flavor in requirements engineering. Our didactic approach also addresses these skills, while resting on a sound pedagogical underpinning. The paper also summarizes indications for the success of this approach, in particular by participants' self-evaluations.},
address = {New York, NY, USA},
author = {Sedelmaier, Yvonne and Landes, Dieter},
booktitle = {Annual Conference on Innovation and Technology in Computer Science Education, ITiCSE},
doi = {10.1145/3059009.3059011},
isbn = {9781450347044},
issn = {1942647X},
keywords = {Competence-oriented didactics,Higher education,Requirements engineering education,Student learning},
month = {jun},
pages = {116--121},
publisher = {Association for Computing Machinery},
title = {{Experiences in teaching and learning requirements engineering on a sound didactical basis}},
url = {https://dl.acm.org/doi/10.1145/3059009.3059011},
volume = {Part F128680},
year = {2017}
}


@article{Wever2019,
abstract = {In software engineering, the imprecise requirements of a user are transformed to a formal requirements specification during the requirements elicitation process. This process is usually guided by requirements engineers interviewing the user. We want to partially automate this first step of the software engineering process in order to enable users to specify a desired software system on their own. With our approach, users are only asked to provide exemplary behavioral descriptions. The problem of synthesizing a requirements specification from examples can partially be reduced to the problem of grammatical inference, to which we apply an active coevolutionary learning approach. However, this approach would usually requiremany feedback queries to be sent to the user. In this work, we extend and generalize our active learning approach to receive knowledge from multiple oracles, also known as proactive learning. The “user oracle” represents input received from the user and the “knowledge oracle” represents available, formalized domain knowledge. We call our two-oracle approach the “first apply knowledge then query” (FAKT/Q) algorithm.We compare FAKT/Q to the active learning approach and provide an extensive benchmark evaluation. As result we find that the number of required user queries is reduced and the inference process is sped up significantly. Finally, with so-called On-The-Fly Markets, we present a motivation and an application of our approach where such knowledge is available.},
author = {Wever, Marcel and {Van Rooijen}, Lorijn and Hamann, Heiko},
doi = {10.1162/evco_a_00266},
issn = {15309304},
journal = {Evolutionary Computation},
keywords = {Coevolution,Grammatical inference,Multiobjective optimization,Multioracle,Proactive learning,Requirements specification,Search-based software engineering},
month = {jun},
number = {2},
pages = {165--193},
pmid = {31730371},
publisher = {MIT Press Journals},
title = {{Multioracle coevolutionary learning of requirements specifications from examples in on-the-fly markets}},
url = {https://www.mitpressjournals.org/doi/abs/10.1162/evco{\_}a{\_}00266},
volume = {28},
year = {2019}
}



@INPROCEEDINGS{7320358,
  author={R. {Mahdavi-Hezave} and R. {Ramsin}},
  booktitle={2015 International Conference on Evaluation of Novel Approaches to Software Engineering (ENASE)}, 
  title={FDMD: Feature-Driven Methodology Development}, 
  year={2015},
  volume={},
  number={},
  pages={229-237},
  abstract={Situational Method Engineering (SME) is a branch of software engineering which helps develop bespoke methodologies to fit the specific characteristics of the software project at hand. As in software development, SME too involves rigorous Requirements Engineering (RE), so much so that if requirements elicitation and definition is mishandled in any way, methodology development will most likely fail as a result. In this paper, we propose a Feature-driven methodology for SME; in this SME methodology, the requirements of the target methodology are captured as Features. First introduced in the agile FDD (Feature-Driven Development) methodology, Features are fully object-oriented and provide all the benefits that the object-oriented paradigm has to offer. Due to the object-oriented nature of Features and the rest of its deliverables, our proposed Feature-Driven Methodology Development (FDMD) process is fully seamless; this also facilitates the development of tool support for the methodology which is produced by applying FDMD.},
  keywords={Software;Object oriented modeling;Programming;Encoding;Engines;Requirements engineering;Software engineering;Software Development Methodology;Situational Method Engineering;Requirements Engineering;Feature-Driven Development},
  doi={},
  ISSN={},
  month={April},}

@inproceedings{Sharma2018,
abstract = {Crowdsourcing has aroused a lot of interest in Requirements Engineering (RE) research community. RE activities are inherently complex in nature-both effort and time intensive, and quite dependent on each-other. The potential of crowdsourcing has been acknowledged for addressing complex tasks in general. We intend to study the potential of crowdsourcing for a broad spectrum of RE activities, i.e. from gathering requirements to their validation, through our proposed tool, CRUISE (Crowdsourcing for Requirements Engineering). CRUISE is aimed at involving interested users for gathering, analysing, validating, prioritizing, and negotiating requirements. In this paper, we present our vision and future roadmap for our proposed tool, CRUISE. We also report our observations from preliminary investigation experimental study to check the feasibility and viability of crowdsourcing based tool for Requirements Elicitation activity.},
author = {Sharma, Richa and Sureka, Ashish},
booktitle = {2017 10th International Conference on Contemporary Computing, IC3 2017},
doi = {10.1109/IC3.2017.8284308},
isbn = {9781538630778},
keywords = {Automated Requirements Engineering,Crowdsourcing,Participatory Requirements Engineering,Requirements Elicitation},
month = {feb},
pages = {1--7},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{CRUISE: A platform for crowdsourcing Requirements Elicitation and evolution}},
url = {http://ieeexplore.ieee.org/document/8284308/},
volume = {2018-January},
year = {2018}
}

@inproceedings{Lorca2018,
abstract = {Software engineering courses continually strive to maintain an excellent teaching curriculum that provides students with the agile skills as per industry needs. A particular challenge of teaching requirements engineering is capturing and communicating software requirements without killing team agility with excessive documentation. In many projects, requirements can be ambiguous and inconsistent. It is important to find a middle ground between completely by-passing requirements documentation and writing a complete Software Requirements Specification. In this paper, we report our experiences, presenting a guideline for students and educators who wish to adopt motivational modelling, a lightweight approach to requirements elicitation and modelling, for agile requirements engineering. Motivational modelling is an efficient technique that also represents a good boundary object to support discussions between developers and non-technical clients. Finally, we outline discussion points regarding where motivational models could fit into other agile practices.},
author = {Lorca, Antonio Lopez and Burrows, Rachel and Sterling, Leon},
booktitle = {Proceedings - 2018 8th International Workshop on Requirements Engineering Education and Training, REET 2018},
doi = {10.1109/REET.2018.00010},
isbn = {9781538684085},
keywords = {Agile,Motivational models,Requirements Engineering,Teaching},
month = {oct},
pages = {30--39},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Teaching motivational models in agile requirements engineering}},
url = {https://ieeexplore.ieee.org/document/8501282/},
year = {2018}
}

@inproceedings{Kalinowski2017,
abstract = {[Context] Defect Causal Analysis (DCA) represents an efficient practice to improve software processes. While knowledge on cause-effect relations is helpful to support DCA, collecting cause-effect data may require significant effort and time. [Goal] We propose and evaluate a new DCA approach that uses cross-company data to support the practical application of DCA. [Method] We collected cross-company data on causes of requirements engineering problems from 74 Brazilian organizations and built a Bayesian network. Our DCA approach uses the diagnostic inference of the Bayesian network to support DCA sessions. We evaluated our approach by applying a model for technology transfer to industry and conducted three consecutive evaluations: (i) in academia, (ii) with industry representatives of the Fraunhofer Project Center at UFBA, and (iii) in an industrial case study at the Brazilian National Development Bank (BNDES). [Results] We received positive feedback in all three evaluations and the cross-company data was considered helpful for determining main causes. [Conclusions] Our results strengthen our confidence in that supporting DCA with cross-company data is promising and should be further investigated.},
author = {Kalinowski, Marcos and Curty, Pablo and Paes, Aline and Ferreira, Alexandre and Spinola, Rodrigo and Fernandez, Daniel Mendez and Felderer, Michael and Wagner, Stefan},
booktitle = {Proceedings - 2017 IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track, ICSE-SEIP 2017},
doi = {10.1109/ICSE-SEIP.2017.14},
isbn = {9781538627174},
keywords = {Bayesian network,case study,cross-company data,defect causal analysis,requirements engineering,technology transfer},
month = {jun},
pages = {223--232},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Supporting defect causal analysis in practice with cross-company data on causes of requirements engineering problems}},
url = {http://ieeexplore.ieee.org/document/7965446/},
year = {2017}
}

@inproceedings{El-Gharib2019,
abstract = {Process mining uses event log data to discover processes, hence enabling multiple requirements elicitation activities. As the number of applications deployed on a cloud infrastructure is increasing, it becomes important to understand their processes and the ways these existing systems are actually used. However, the cloud brings new challenges to process mining that deserve special attention. This paper reports on a systematic literature review based on a selection of 27 papers. The aim is to assess the applicability of process mining techniques to cloud-based applications, to document the processes of these existing systems. We observe there is a growing interest in applying process mining to these areas, and we report on algorithms, tools, and validation approaches taken. We also report on many cloud-specific challenges for process mining, which require further attention from the research community.},
author = {El-Gharib, Najah Mary and Amyot, Daniel},
booktitle = {Proceedings - 2019 IEEE 27th International Requirements Engineering Conference Workshops, REW 2019},
doi = {10.1109/REW.2019.00012},
isbn = {9781728151656},
keywords = {Cloud applications,Process mining,Requirements elicitation,User behavior},
month = {sep},
pages = {34--43},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Process mining for cloud-based applications: A systematic literature review}},
url = {https://ieeexplore.ieee.org/document/8933636/},
year = {2019}
}

@inproceedings{Puarungroj2019,
abstract = {The research explored the requirements elicitation process in the development of Student Affairs Information Systems at one university. This system was developed by the internal team instead of outsourcing. An action research method was employed in order to examine how requirements should be handled; and implement the effective ways to carry out the elicitation process. The system development was divided into 9 phases starting from student activity system. During the elicitation process, four main problems were discovered: 1) users tried to avoid the interviews or reluctant to state their requirements; 2) users did not know how computers would change their work; 3) users asked for changes even after system was developed; 4) technology change was not taken into consideration. From these problems, some solving methods were applied during the elicitation process: 1) arranged study visits to obtain new ideas of software solution; 2) created prototypes to compare with users' requirements and experiences; 3) considered an issue of technology change to find possible applications of current technologies.},
author = {Puarungroj, Wichai and Boonsirisumpun, Narong and Phromkhot, Suchada and Puarungroj, Nattiya},
booktitle = {TIMES-iCON 2018 - 3rd Technology Innovation Management and Engineering Science International Conference},
doi = {10.1109/TIMES-iCON.2018.8621784},
isbn = {9781538675731},
keywords = {Internal Software Development,Requirements Elicitation Problem,Requirements Elicitation Process,Requirements Engineering,Student Affairs},
month = {jan},
pages = {1--5},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Dealing with Change in Software Development: A Challenge for Requirements Engineering}},
url = {https://ieeexplore.ieee.org/document/8621784/},
year = {2019}
}

@inproceedings{Portugal2015,
abstract = {Requirements elicitation is the activity of identifying facts that compose the system requirements. One of the steps of this activity is the identification of information sources, which is a time-consuming task. Text documents are typically an important and abundant information source. However, their analysis to gather useful information is also time consuming and hard to automate. Because of its characteristics, the identification of information sources and analysis of text documents are critical in time-constrained projects, which are typically addressed through agile approaches. This paper presents a strategy for time-constrained elicitation, which is based on mining GitHub content. The strategy aims the identification of information sources (similar projects) and the automatic analysis of textual documents (projects content) through text mining techniques. Furthermore, it maintains the traceability between the data mined and its sources, boosting the reuse of existing information. A tool is being created to support the strategy.},
author = {Portugal, Roxana Lisette Quintanilla and {Do Prado Leite}, Julio Cesar Sampaio and Almentero, Eduardo},
booktitle = {1st International Workshop on Just-in-Time Requirements Engineering, JIT RE 2015 - Proceedings},
doi = {10.1109/JITRE.2015.7330171},
isbn = {9781509001194},
keywords = {Requirements elicitation,just-in-time requirements,reuse of information,text-mining,time-constrained requirements},
month = {nov},
pages = {5--8},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Time-constrained requirements elicitation: Reusing GitHub content}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7330171},
year = {2015}
}

%VANESSA


%Comparison of Research and Practice Regarding What We Mean by "The Right Software Requirements Elicitation Technique"

@inproceedings{Carrizo2017,
abstract = {In terms of capturing software requirements, the most appropriate elicitation technique must be selected, but what does this mean? This paper makes a comparison between what researchers and software engineers see as adequate technique for capturing relevant information to meet software requirements. A systematic mapping of constructs which researchers define as good techniques is presented and compared with practitioners' opinions. The study identified 13 constructs that were finally whittled down to six. The software engineers' survey showed no significant difference between these constructs. This work demonstrates the divergence of views between researchers and practitioners about the quality of software requirement elicitation techniques. The results call for more empirical research to define a common way to measure the performance of techniques and so to support their selection.},
author = {Carrizo, Dante},
booktitle = {Proceedings - 2016 10th International Conference on the Quality of Information and Communications Technology, QUATIC 2016},
doi = {10.1109/QUATIC.2016.022},
isbn = {9781509035816},
keywords = {Software engineering,elicitation techniques adequacy,requirements elicitation,survey,systematic mapping},
month = {jan},
pages = {79--82},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Comparison of research and practice regarding what we mean by 'The Right Software Requirements Elicitation Technique'}},
url = {http://ieeexplore.ieee.org/document/7814519/},
year = {2017}
}



%Let’s Hear it from RETTA: A Requirements Elicitation Tool for TrAffic Management Systems

@inproceedings{Noaeen2017,
abstract = {The area of Traffic Management (TM) is characterized by uncertainty, complexity, and imprecision. The complexity of software systems in the TM domain which contributes to a more challenging Requirements Engineering (RE) job mainly stems from the diversity of stakeholders and complexity of requirements elicitation in this domain. This work brings an interactive solution for exploring functional and non-functional requirements of software-reliant systems in the area of traffic management. We prototyped the RETTA tool which leverages the wisdom of the crowd and combines it with machine learning approaches such as Natural Language Processing and Na{\"{i}}ve Bayes to help with the requirements elicitation and classification task in the TM domain. This bridges the gap among stakeholders from both areas of software development and transportation engineering. The RETTA prototype is mainly designed for requirements engineers and software developers in the area of TM and can be used on Android-based devices.},
archivePrefix = {arXiv},
arxivId = {1707.01927},
author = {Noaeen, Mohammad and Abad, Zahra Shakeri Hossein and Far, Behrouz Homayoun},
booktitle = {Proceedings - 2017 IEEE 25th International Requirements Engineering Conference, RE 2017},
doi = {10.1109/RE.2017.78},
eprint = {1707.01927},
isbn = {9781538631911},
keywords = {Requirements Engineering,Tool Development,Traffic Signal Timing,Transportation Management},
month = {sep},
pages = {450--451},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Let's Hear it from RETTA: A Requirements Elicitation Tool for TrAffic Management Systems}},
url = {http://ieeexplore.ieee.org/document/8049156/},
year = {2017}
}


%Software prototypes: Enhancing the quality of requirements engineering process


@inproceedings{Noaeen2017,
abstract = {The area of Traffic Management (TM) is characterized by uncertainty, complexity, and imprecision. The complexity of software systems in the TM domain which contributes to a more challenging Requirements Engineering (RE) job mainly stems from the diversity of stakeholders and complexity of requirements elicitation in this domain. This work brings an interactive solution for exploring functional and non-functional requirements of software-reliant systems in the area of traffic management. We prototyped the RETTA tool which leverages the wisdom of the crowd and combines it with machine learning approaches such as Natural Language Processing and Na{\"{i}}ve Bayes to help with the requirements elicitation and classification task in the TM domain. This bridges the gap among stakeholders from both areas of software development and transportation engineering. The RETTA prototype is mainly designed for requirements engineers and software developers in the area of TM and can be used on Android-based devices.},
archivePrefix = {arXiv},
arxivId = {1707.01927},
author = {Noaeen, Mohammad and Abad, Zahra Shakeri Hossein and Far, Behrouz Homayoun},
booktitle = {Proceedings - 2017 IEEE 25th International Requirements Engineering Conference, RE 2017},
doi = {10.1109/RE.2017.78},
eprint = {1707.01927},
isbn = {9781538631911},
keywords = {Requirements Engineering,Tool Development,Traffic Signal Timing,Transportation Management},
month = {sep},
pages = {450--451},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Let's Hear it from RETTA: A Requirements Elicitation Tool for TrAffic Management Systems}},
url = {http://ieeexplore.ieee.org/document/8049156/},
year = {2017}
}

%Requirements Elicitation Techniques Applied in Software Startups


@inproceedings{Rafiq2017,
abstract = {Requirements elicitation is the first crucial stage of a requirements engineering process, which intends to uncover, acquire and elaborate requirements for software systems. When software startups are concerned, requirements elicitation is particularly challenging due to the high uncertainty that a startup is confronted with. Few studies have investigated how software startups conduct requirements elicitation and what techniques are used in such a context. This study intends to address this knowledge gap. Three software startups from different part of the globe were studied. The findings reveal that the requirements elicitation process in startups is primordial and mainly informal, and it is an ongoing process alongside with product evolution. Software startups do employ established requirements elicitation techniques including interviews, prototyping and brainstorming. They also utilize other less common ones such as competitor analysis, collaborative team discussion and use of model users. This study highlights the market-driven nature of requirements that software startups have to deal with, and offers the first insights on the requirements elicitation techniques that could be relevant and applicable in the context of software startups.},
author = {Rafiq, Usman and Bajwa, Sohaib Shahid and Wang, Xiaofeng and Lunesu, Ilaria},
booktitle = {Proceedings - 43rd Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2017},
doi = {10.1109/SEAA.2017.73},
isbn = {9781538621400},
keywords = {Brainstorming,Competitor analysis,Market-driven requirements,Prototyping,Requirements elicitation,Requirements elicitation techniques,Software startups},
month = {sep},
pages = {141--144},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Requirements elicitation techniques applied in software startups}},
url = {http://ieeexplore.ieee.org/document/8051340/},
year = {2017}
}


%The Role Clarity Framework to Improve Requirements Gathering

@article{Taghavi2017,
abstract = {Incorrect and incomplete requirements have been reported as two of the top reasons for information systems (IS) project failures. In order to address these concerns, several IS analysis and design studies have focused on understanding the business needs and organizational factors prior to specifying the requirements. In this research, we add to the existing incremental solutions, such as the work system method and goal-oriented requirements engineering, by proposing the Role Clarity Framework drawn from the theories of “role dynamics” and “goal setting and task performance” in organization studies. The Role Clarity Framework consists of three main concepts related to any organizational role: expectations, activities, and consequences. Based on the interactions among different roles, this framework demonstrates how the business goals and activities of each role, as played out by IS users, are formed and/or changed in the organization. Finally, the Role Clarity Framework helps IS analysts to improve their communication with users and anticipate changes in their requirements, thus improving the gathering of requirements for IS design.},
author = {Taghavi, Atefeh and Woo, Carson},
doi = {10.1145/3083726},
issn = {21586578},
journal = {ACM Transactions on Management Information Systems},
keywords = {And Phrases: Organizational role,Business activities,Changes in requirements,Communication between analysts and users,Principles,Role Clarity Framework,Role clarity},
month = {jun},
number = {2-3},
pages = {1--16},
publisher = {Association for Computing Machinery},
title = {{The role clarity framework to improve requirements gathering}},
url = {https://dl.acm.org/doi/10.1145/3083726},
volume = {8},
year = {2017}
}



%Requirements Volatility in Software Architecture Design: An Exploratory Case Study

@inproceedings{Aaramaa2017,
abstract = {Requirements volatility is a major issue in software (SW) development, causing problems such as project delays and cost overruns. Even though there is a considerable amount of research related to requirement volatility, the majority of it is inclined toward project management aspects. The relationship between SW architecture design and requirements volatility has not been researched widely, even though changing requirements may for example lead to higher defect density during testing. An exploratory case study was conducted to study how requirements volatility affects SW architecture design. Fifteen semi-structured, thematic interviews were conducted in the case company, which provides the selection of software products for business customers and consumers. The research revealed the factors, such as requirements uncertainty and dynamic business environment, causing requirements volatility in the case company. The study identified the challenges that requirements volatility posed to SW architecture design, including scheduling and architectural technical debt. In addition, this study discusses means of mitigating the factors that cause requirements volatility and addressing the challenges posed by requirements volatility. SW architects are strongly influenced by requirement volatility. Thus understanding the factors causing requirements volatility as well as means to mitigate the challenges has high industrial relevance.},
address = {New York, New York, USA},
author = {Aaramaa, Sanja and Dasanayake, Sandun and Oivo, Markku and Markkula, Jouni and Saukkonen, Samuli},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3084100.3084105},
isbn = {9781450352703},
keywords = {Requirement management,Software architecture},
month = {jul},
pages = {40--49},
publisher = {Association for Computing Machinery},
title = {{Requirements volatility in software architecture design: An exploratory case study}},
url = {http://dl.acm.org/citation.cfm?doid=3084100.3084105},
volume = {Part F128767},
year = {2017}
}




%A Set of Artifacts and Models to Support Requirements Communication Based on Perspectives
@article{Oran2017,
author = {Oran, Ana Carolina},
doi = {10.1145/3011286.3011303},
issn = {0163-5948},
journal = {ACM SIGSOFT Software Engineering Notes},
month = {jan},
number = {6},
pages = {1--5},
publisher = {Association for Computing Machinery (ACM)},
title = {{A Set of Artifacts and Models to Support Requirements Communication Based on Perspectives}},
url = {https://dl.acm.org/doi/10.1145/3011286.3011303},
volume = {41},
year = {2017}
}



% Let’s Hear it from RETTA: A Requirements Elicitation Tool for TrAffic Management Systems
@inproceedings{Vujicic2016,
abstract = {As software systems have become increasingly complex and sophisticated, the process of defining requirements for software development has become increasingly demanding and challenging. Still, requirements elicitation is a necessity in any software development project that aims to create solution that will satisfy human and technical needs. There is no unique approach to requirements engineering, and project team should define methodology for requirements elicitation and management, and accordingly choose the right requirement engineering techniques. Requirements elicitation is especially challenging when software users originate from countries with different culturally and technology diverse conditions. Often, socio-cultural factors appear as the core constrains to use software across different countries. In this paper authors as a part of project team present requirements elicitation methodology used in FP7 project Enhanced Government Learning (EAGLE). EAGLE project aims to introduce e-learning and open educational resources in public administration institutions in culturally and technologically diverse European countries.},
author = {Vujicic, Tijana and Scepanovic, Snezana and Jovanovic, Jelena},
booktitle = {2016 5th Mediterranean Conference on Embedded Computing, MECO 2016 - Including ECyPS 2016, BIOENG.MED 2016, MECO: Student Challenge 2016},
doi = {10.1109/MECO.2016.7525693},
isbn = {9781509022212},
keywords = {open data,open educational resources (OER),public administration,requirements elicitation,requirements engineering,technology enhanced learning (TEL)},
month = {jul},
pages = {464--467},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Requirements elicitation in culturally and technologically diverse settings}},
url = {http://ieeexplore.ieee.org/document/7525693/},
year = {2016}
}




%Comparison of Research and Practice Regarding What We Mean by "The Right Software Requirements Elicitation Technique"



@inproceedings{Karras2016,
abstract = {Workshops are an established technique for requirements elicitation. A lot of information is revealed during a workshop, which is generally captured via textual minutes. The scribe suffers from a cognitive overload due to the difficulty of gathering all information, listening and writing at the same time. Video recording is used as additional option to capture more information, including non-verbal gestures. Since a workshop can take several hours, the recorded video will be long and may be disconnected from the scribe's notes. Therefore, the weak and unclear structure of the video complicates the access to the recorded information, for example in subsequent requirements engineering activities. We propose the combination of textual minutes and video with a software tool. Our objective is connecting textual notes with the corresponding part of the video. By highlighting relevant sections of a video and attaching notes that summarize those sections, a more useful structure can be achieved. This structure allows an easy and fast access to the relevant information and their corresponding video context. Thus, a scribe's overload can be mitigated and further use of a video can be simplified. Tool-supported analysis of such an enriched video can facilitate the access to all communicated information of a workshop. This allows an easier elicitation of high-quality requirements. We performed a preliminary evaluation of our approach in an experimental set-up with 12 participants. They were able to elicit higher-quality requirements with our software tool.},
author = {Karras, Oliver and Kiesling, Stephan and Schneider, Kurt},
booktitle = {Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016},
doi = {10.1109/RE.2016.10},
isbn = {9781509041213},
keywords = {Requirements elicitation,requirements quality,video analysis,workshop video},
month = {dec},
pages = {146--155},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Supporting Requirements Elicitation by Tool-Supported Video Analysis}},
url = {http://ieeexplore.ieee.org/document/7765520/},
year = {2016}
}




%BRAYAN
%Impact and challenges of requirements elicitation prioritization in quality to agile process: Scrum as a case scenario


@inproceedings{Asghar2017,
abstract = {Agile methodology is an innovative and iterative process that supports changing requirements and helps in addressing changes throughout the development process. Requirements are elicited at the beginning of every software development process and project (product) and latter are prioritized according to their importance to the market and to the product itself. One of the most important and influencing steps while making a software product is requirements prioritization. Prioritizing requirements helps the software team to understand the existence and importance of a particular requirement, there are several requirements prioritization methodologies that aid in decision making but importantly many lacks to account the important factors that have significant influence in prioritizing requirements. We have proposed a requirement prioritization methodology based on several factors such as time to market, cost, risk etc. The proposed model is expected to overcome this lack. In (Scrum) sprints, requirements will be prioritized both on the basis of influencing factors such as cost, value, risk, time to market etc. and through the effect of non-functional requirements over functional requirements. This will improve the overall quality of software product when it is included in the development process of scrum. Requirements will not only be prioritized based on sprints, human decision but by critically analyzing the factors (sub characteristics) that can cause the product to success/fail repeatedly thus ensuring the consistency in right requirements and hence the right prioritized requirements will be selected for a particular sprint at a time.},
author = {Asghar, Aneesa Rida and Tabassum, Atika and Bhatti, Shahid Nazir and Jadi, Amr Mohsen},
booktitle = {International Conference on Communication Technologies, ComTech 2017},
doi = {10.1109/COMTECH.2017.8065749},
isbn = {9781509059843},
keywords = {Agile Software Development (ASD),Agile Software Engineering (ASE),Product Owner (PO),Scrum},
month = {oct},
pages = {50--55},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Impact and challenges of requirements elicitation {\&} prioritization in quality to agile process: Scrum as a case scenario}},
url = {http://ieeexplore.ieee.org/document/8065749/},
year = {2017}
}




%Where Enterprise Architecture and Early Software Engineering Meet: An Approach to Use Cases Definition


@inproceedings{Miranda2018,
abstract = {Software development involves the resolution of technical problems related to a certain domain. However, in order to provide a suitable technical solution, it is necessary to take the organizational environment related to the software into account. Use cases have been often used to elicit requirements and represent functionalities that the software must provide to its users. However, use cases are not expressive enough to represent the organizational environment. Moreover, this is not the purpose of use cases. In this context, Enterprise Architecture (EA) emerges as a way to describe the organization's domain. EA provides architectural descriptions that support the alignment between information technology (IT) and organizational processes and, thus, helps developers to properly understand the requirements the software must meet. In this paper, we propose an approach that uses EA models as a basis to define use cases, named CEA (use Cases definition oriented by Enterprise Architecture modeling). To demonstrate the proposal use, we applied it in a project in the Public Security domain. Additionally, CEA was evaluated in an experimental study. The results indicate that EA models helped requirements engineers to define use cases.},
address = {New York, New York, USA},
author = {Miranda, Gabriel M. and Santos, Lucas A. and Bernab{\'{e}}, C{\'{e}}sar H. and Barcellos, Monalessa P.},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3275245.3275271},
isbn = {9781450365659},
keywords = {Enterprise Architecture,Requirements Engineering,Use Case},
month = {oct},
pages = {240--249},
publisher = {Association for Computing Machinery},
title = {{Where enterprise architecture and early software engineering meet: An approach to use cases definition}},
url = {http://dl.acm.org/citation.cfm?doid=3275245.3275271},
year = {2018}
}









%BPMN in Engineering Software Requirements: An Introductory Brief Guide


@inproceedings{Odeh2017,
abstract = {Requirements engineering phase is the cornerstone in engineering any software system. During this phase, one of its biggest and common challenges is to bridge the communication gap between business and IT people in order to increase customer satisfaction regarding resultant approved software specification. One of the standardized business analysis and modelling techniques is BPMN. However, the requirements engineering community is poor in publishing a guide for using standardized tools during engineering software requirements. This research aims at analyzing the use of BPMN during requirements engineering process and how it will assist the requirements engineers in overcoming common challenges during their duties. The analysis in this research is based on analyzing the usage of BPMN during engineering requirements within three real-life projects. Employing the BPMN while engineering requirements has demonstrated a creation of common communication channel between participants, who are from different backgrounds, and increased satisfaction of customers and requirements engineers regarding resultant software specification.},
address = {New York, New York, USA},
author = {Odeh, Yousra},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3149572.3149584},
isbn = {9781450353373},
keywords = {BPMN,Business process management,Business process modelling,Engineering software systems,Requirements engineering},
month = {oct},
pages = {11--16},
publisher = {Association for Computing Machinery},
title = {{BPMN in engineering software requirements: An introductory brief guide}},
url = {http://dl.acm.org/citation.cfm?doid=3149572.3149584},
year = {2017}
}













%Usability of Requirements Techniques: A Systematic Literature Review

@inproceedings{Bombonatti2016,
abstract = {The usability of requirements engineering (RE) techniques has been recognised as a key factor for their successful adoption by industry. RE techniques must be accessible to stakeholders with different backgrounds, so they can be empowered to effectively and efficiently contribute to building successful systems. When selecting an appropriate requirements engineering technique for a given context, one should consider the usability supported by each of the candidate techniques. The first step towards achieving this goal is to gather the best evidence available on the usability of RE approaches by performing a systematic literature review, to answer one research question: How is the usability of requirements engineering techniques and tools addressed? We systematically review articles published in the Requirements Engineering Journal, one of the main sources for mature work in RE, to motivate a research roadmap to make RE approaches more accessible to stakeholders with different backgrounds.},
address = {New York, New York, USA},
author = {Bombonatti, Denise and Gralha, Catarina and Moreira, Ana and Ara{\'{u}}jo, Jo{\~{a}}o and Goul{\~{a}}o, Miguel},
booktitle = {Proceedings of the ACM Symposium on Applied Computing},
doi = {10.1145/2851613.2851758},
isbn = {9781450337397},
keywords = {Requirements engineering approaches,Systematic literature review,Usability},
month = {apr},
pages = {1270--1275},
publisher = {Association for Computing Machinery},
title = {{Usability of requirements techniques: A systematic literature review}},
url = {http://dl.acm.org/citation.cfm?doid=2851613.2851758},
volume = {04-08-April-2016},
year = {2016}
}















%Needs and Challenges for a Platform to Support Large-Scale Requirements Engineering: A Multiple-Case Study

@inproceedings{Fucci2018,
abstract = {Background: Requirement engineering is often considered a critical activity in system development projects. The increasing complexity of software as well as number and heterogeneity of stakeholders motivate the development of methods and tools for improving large-scale requirement engineering. Aims: The empirical study presented in this paper aim to identify and understand the characteristics and challenges of a platform, as desired by experts, to support requirement engineering for individual stakeholders, based on the current pain-points of their organizations when dealing with a large number requirements. Method: We conducted a multiple case study with three companies in different domains. We collected data through ten semi-structured interviews with experts from these companies. Results: The main pain-point for stakeholders is handling the vast amount of data from different sources. The foreseen platform should leverage such data to manage changes in requirements according to customers' and users' preferences. It should also offer stakeholders an estimation of how long a requirements engineering task will take to complete, along with an easier requirements dependency identification and requirements reuse strategy. Conclusions: The findings provide empirical evidence about how practitioners wish to improve their requirement engineering processes and tools. The insights are a starting point for in-depth investigations into the problems and solutions presented. Practitioners can use the results to improve existing or design new practices and tools.},
address = {New York, NY, USA},
author = {Fucci, Davide and Palomares, Cristina and Franch, Xavier and Costal, Dolors and Raatikainen, Mikko and Stettinger, Martin and Kurtanovic, Zijad and Kojo, Tero and Koenig, Lars and Falkner, Andreas and Schenner, Gottfried and Brasca, Fabrizio and M{\"{a}}nnist{\"{o}}, Tomi and Felfernig, Alexander and Maalej, Walid},
booktitle = {International Symposium on Empirical Software Engineering and Measurement},
doi = {10.1145/3239235.3240498},
isbn = {9781450358231},
issn = {19493789},
keywords = {Case study,Large-scale requirement engineering,Recommender systems,Stakeholders productivity,User participation},
month = {oct},
pages = {1--10},
publisher = {IEEE Computer Society},
title = {{Needs and challenges for a platform to support large-scale requirements engineering: A multiple-case study}},
url = {https://dl.acm.org/doi/10.1145/3239235.3240498},
year = {2018}
}




%REM4DSPL: A Requirements Engineering Method for Dynamic Software Product Lines

@inproceedings{Sousa2019,
abstract = {Context: Dynamic Software Product Line (DSPL) is a set of software products capable of self-adapt and configure in run-time. DSPL products have common features (commonalities) and varying features (managed in run-time according to context changes). Objective: DSPL requirements engineering is challenging. Requirements engineers have to carefully plan self-adaptation while eliciting, modeling, and managing variability requirements. This paper introduces a method for DSPL requirements engineering. Method: We relied on empirically-derived activities of DSPL requirements engineering to build our method. We selected techniques and templates used in other domains such as SPL for refinement and incorporation into the method. We asked DSPL experts via a survey on the method applicability. Result: We introduced the Requirements Engineering Method for DSPL (REM4DSPL). Elicitation is guided by supervised discussions. Modeling relies on feature models. Variability Management is tool-assisted and validated via feature model inspection. DSPL experts agreed on the method applicability and suggested improvements. Conclusion: REM4DSPL relies on empirically-derived activities, techniques that have been successfully used by previous work, and templates adapted to the DSPL context. We expect our method to guide requirements engineers in practice.},
address = {New York, New York, USA},
author = {Sousa, Amanda and Uch{\^{o}}a, Anderson and Fernandes, Eduardo and Bezerra, Carla I.M. and Monteiro, Jos{\'{e}} Maria and Andrade, Rossana M.C.},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3364641.3364656},
isbn = {9781450372824},
keywords = {Dynamic Software Product Lines,Requirements Engineering},
month = {oct},
pages = {129--138},
publisher = {Association for Computing Machinery},
title = {{REM4DSPL: A requirements engineering method for dynamic software product lines}},
url = {http://dl.acm.org/citation.cfm?doid=3364641.3364656},
year = {2019}
}










%Effective Requirements Engineering for CSE Projects: A Lightweight Tool


@inproceedings{Li2015,
abstract = {Requirements engineering (RE) is crucial for software projects. However, formal requirements engineering is often ignored in scientific software projects. To enhance the quality of scientific software and to adopt more good software engineering practices, we claim that requirements need to be elicited and specified. We present DRUMS Board, which supports lightweight requirements elicitation. DRUMS Board is easy to learn and easy to use. Scientists who have little or no prior RE knowledge can effectively create and manage requirements with low effort. To evaluate the effectiveness of DRUMS Board, a controlled experiment was conducted in the domain of computational fluid dynamics. The evaluation results show that using DRUMS Board has a significant effect on the number and innovativeness of generated ideas in the requirements elicitation process.},
author = {Li, Yang and Guzman, Emitza and Bruegge, Bernd},
booktitle = {Proceedings - IEEE 18th International Conference on Computational Science and Engineering, CSE 2015},
doi = {10.1109/CSE.2015.49},
isbn = {9781467382977},
keywords = {CSE,Requirements Engineering,Software},
month = {oct},
pages = {253--261},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Effective requirements engineering for CSE projects: A lightweight tool}},
url = {http://ieeexplore.ieee.org/document/7371381/},
year = {2015}
}
















%Fuzzy_MoSCoW: A fuzzy based MoSCoW method for the prioritization of software requirements

@inproceedings{Ahmad2018,
abstract = {After elicitation of software requirements, prioritization of software requirements is an important issue of requirements elicitation process. Different methods have been developed for the prioritization of the software requirements like analytic hierarchy process, TOPSIS, MoSCoW, etc. Among these methods, MoSCoW method has received less attention by software requirements engineering community that how to apply the MoSCoW method under fuzzy environment for software requirements prioritization (SRP). Therefore, to address the above issue, we proposed a method for SRPusing fuzzy based MoSCoW method. Finally, we explain the proposed method with the help of Library Management System, as a case study.},
author = {Ahmad, Khadija Sania and Ahmad, Nazia and Tahir, Hina and Khan, Shaista},
booktitle = {2017 International Conference on Intelligent Computing, Instrumentation and Control Technologies, ICICICT 2017},
doi = {10.1109/ICICICT1.2017.8342602},
isbn = {9781509061068},
keywords = {Library Management System,MoSCoW method,Requirements prioritization,Software requirements elicitation},
month = {apr},
pages = {433--437},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Fuzzy-MoSCoW: A fuzzy based MoSCoW method for the prioritization of software requirements}},
url = {http://ieeexplore.ieee.org/document/8342602/},
volume = {2018-January},
year = {2018}
}
















%A framework for detecting ambiguity in software requirement specification


@inproceedings{Sabriye2017,
abstract = {The accomplishment of any software system success depends on how well it meets the requirements of the stakeholders. These requirements are elicited from the customers. Software requirements are unambiguous if and only if it has one meaning. The elicited requirements are documented in software requirements specification document and these requirements are written in natural languages. Natural languages are basically ambiguous which makes the requirements documented in software requirements specification document unclear. This unclear requirement causes that software developers develop software which is different from the expected software based on the customer needs. The objective of this paper is to propose a framework that are able to detect ambiguity in software requirements specification document automatically using parts of speech tagging technique. To validate the outcome of the proposed work, open source software requirements specification documents will be used and generated result of the proposed work will be evaluated and validated by making comparison between the proposed prototype results and human generated results to decide how the proposed prototype can solved the ambiguity problem.},
author = {ale Sabriye, Ali Olow Jim and Zainon, Wan Mohd Nazmee Wan},
booktitle = {ICIT 2017 - 8th International Conference on Information Technology, Proceedings},
doi = {10.1109/ICITECH.2017.8080002},
isbn = {9781509063321},
keywords = {ambiguity detection,requirements engineering,software requirements specification},
month = {oct},
pages = {209--213},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{A framework for detecting ambiguity in software requirement specification}},
url = {http://ieeexplore.ieee.org/document/8080002/},
year = {2017}
}





















%CAÑAR

@inproceedings{Burnay2015,
abstract = {Requirements elicitation is the activity in requirements engineering (RE) which focuses on the collection of information about requirements of the system-to-be and its environment. One important challenge is elicitation incompleteness; it occurs when information, which may have been relevant for requirements engineering, is not elicited. This may be due to various factors, such as that the requirements engineer asked no questions about it, and the stakeholders did not consider it important. To help requirements engineers reduce elicitation incompleteness, we propose the so-called Model of Elicitation Topic Relevance (METRe). METRe is a diagram that shows topics which can be discussed during requirements elicitation, and expresses the relative importance of each topic to stakeholders and engineers. The more likely it is that a stakeholder or engineer will discuss the topic spontaneously during elicitation, the more important it is for, respectively, stakeholders or engineers. METRe was made by combining our prior work on the importance of topics to stakeholders, and a new round of empirical research. The new round consisted of data collection using a survey, in which the various topics were presented to and evaluated by 50 IT-experts in Belgium. Subjects were asked to evaluate the relative importance of the topics, that is, how relevant they find these topics when eliciting information, and how pro-active they would be in collecting them.},
author = {Burnay, Corentin and Jureta, Ivan and Faulkner, Stephane},
booktitle = {Proceedings - International Conference on Research Challenges in Information Science},
doi = {10.1109/RCIS.2015.7128875},
issn = {21511357},
month = {jun},
number = {June},
pages = {151--158},
publisher = {IEEE Computer Society},
title = {{Towards a Model of Topic Relevance during requirements elicitation - Preliminary results}},
url = {http://ieeexplore.ieee.org/document/7128875/},
volume = {2015-June},
year = {2015}
}

@article{Dey2017,
abstract = {Context Socio-technical systems are expected to understand the dynamics of the execution environment and behave accordingly. Significant work has been done on formalizing and modeling requirements of such adaptive systems. However, not enough attention is paid on eliciting requirements from users and introducing flexibility in the system behavior at an early phase of requirements engineering. Most of the work is based on an assumption that general users' cognitive level would be able to support the inherent complexity of variability acquisition. Objective Our main focus is on providing help to the users with ordinary cognitive level to express their expectations from the complex system considering various contexts. This work also helps the designers to explore the design variability based on the general users' preferences. Method We explore the idea of using a cognitive technique Repertory Grid (RG) to acquire knowledge from users and experts along multiple dimensions of problem and design space. We propose REASSURE methodology which guides requirements engineers to explore the intentional and design variability in an organized way. We also provide a tool support to analyze the knowledge captured in multiple repertory grid files and detect potential conflicts in the intentional variability. Finally, we evaluate the proposed idea by performing an empirical study using smart home system domain. Results The result of our study shows that a greater number of requirements can be elicited after applying our approach. With the help of the provided tool support, it is even possible to detect a greater number of conflicts in user's requirements than the traditional practices. Conclusion We envision RG as a technique to filter design options based on the intentional variability in various contexts. The promising results of empirical study open up new research questions: “how to elicit requirements from multiple stakeholders and reach consensus for multi-dimensional problem domain”.},
author = {Dey, Sangeeta and Lee, Seok Won},
doi = {10.1016/j.infsof.2017.03.004},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Adaptive systems,Repertory grid,Requirements elicitation,Socio-technical systems},
month = {jul},
pages = {160--179},
publisher = {Elsevier B.V.},
title = {{REASSURE: Requirements elicitation for adaptive socio-technical systems using repertory grid}},
volume = {87},
year = {2017}
}


@article{Ngossaha2017,
abstract = {Urban development is a critical issue that many cities are facing, due to the demography growth which results from the economic attractiveness of the urban centers. Based on common standards such as the Urban Development Plans, some projects for transportation systems renewal are progressively launched. In order to allow social cohesion, especially by providing travelers with services which may allow to better organize the transport, it is necessary to structure the transportation system according to sustainability requirements. This paper examines an integrated approach for assessing the sustainability of the current transportation system design, based on a policy making problem, aiming at providing decision makers with a framework allowing them to choose the most eco-responsible policy amongst many alternatives. Since the sustainability indicators may conflict each other, in order to better take into account the requirements of the whole transportation system in its design phase, a system-based approach has been adopted to characterize the complex structure of these indicators. A general methodology for their elicitation is proposed, using a process-object methodology and based on surveys from recent research on sustainable transportation, along with eco-design principles, in order to take into account urban transport priorities, sustainability challenges and the analysis of the whole lifecycle of the transport infrastructure and equipment. To validate this proposal, a multi-criteria decision method, allowing subjectivity, uncertainty, incomplete judgments and group consensus is then performed, based on a case study which shows the flexibility of fuzzy analytical hierarchy process for such assessment.},
author = {Ngossaha, J. Moskola{\"{i}} and Ngouna, R. Hou{\'{e}} and Archim{\`{e}}de, B. and Nlong, J. M.},
doi = {10.1016/j.ifacol.2017.08.1064},
file = {:C$\backslash$:/Users/Alexis-Lenovo/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Ngossaha et al. - 2017 - Sustainability assessment of a transportation system under uncertainty an integrated multicriteria approach.pdf:pdf},
issn = {24058963},
journal = {IFAC-PapersOnLine},
keywords = {complexity,fuzzy analytical hierarchy process,multi-criteria decision-making,sustainability,system engineering,transportation system,uncertainty},
month = {jul},
number = {1},
pages = {7481--7486},
publisher = {Elsevier B.V.},
title = {{Sustainability assessment of a transportation system under uncertainty: an integrated multicriteria approach}},
volume = {50},
year = {2017}
}


@article{Garrido2020,
abstract = {Mathematical programming models are invaluable tools at decision making, assisting managers to uncover otherwise unattainable means to optimize their processes. However, the value they provide is only as good as their capacity to capture the process domain. This information can only be obtained from stakeholders, i.e., clients or users, who can hardly communicate the requirements clearly and completely. Besides, existing conceptual models of mathematical programming models are not standardized, nor is the process of deriving the mathematical programming model from the concept model, which remains ad hoc. In this paper, we propose an agile methodology to construct mathematical programming models based on two techniques from requirements engineering that have been proven effective at requirements elicitation: the language extended lexicon (LEL) and scenarios. Using the pair of LEL + scenarios allows to create a conceptual model that is clear and complete enough to derive a mathematical programming model that effectively captures the business domain. We also define an ontology to describe the pair LEL + scenarios, which has been implemented with a semantic mediawiki and allows the collaborative construction of the conceptual model and the semi-automatic derivation of mathematical programming model elements. The process is applied and validated in a known fresh tomato packing optimization problem. This proposal can be of high relevance for the development and implementation of mathematical programming models for optimizing agriculture and supply chain management related processes in order to fill the current gap between mathematical programming models in the theory and the practice.},
author = {Garrido, Alejandra and Antonelli, Leandro and Martin, Jonathan and Alemany, M. M.E. and Mula, Josefa},
doi = {10.1016/j.compag.2020.105242},
issn = {01681699},
journal = {Computers and Electronics in Agriculture},
keywords = {Fresh tomato packing,Language extended lexicon (LEL),Mathematical programming,Scenarios,Software engineering},
month = {mar},
pages = {105242},
publisher = {Elsevier B.V.},
title = {{Using LEL and scenarios to derive mathematical programming models. Application in a fresh tomato packing problem}},
volume = {170},
year = {2020}
}


@inproceedings{Moketar2016,
abstract = {This demo introduces an automated collaborative requirements engineering tool, called TestMEReq, which is used to promote effective communication and collaboration between client-stakeholders and requirements engineers for better requirements validation. Our tool is augmented with real time communication and collaboration support to allow multiple stakeholders to collaboratively validate the same set of requirements. We have conducted a user study focusing on validating requirements using TestMEReq with a few groups of requirements engineers and client stakeholders. The study shows that our automated tool support is able to assist requirements engineers to effectively communicate with client-stakeholders to better validate the requirements virtually in real time. (Demo video: https://www.youtube.com/watch?v=7sWLOx-N4Jo).},
address = {New York, New York, USA},
author = {Moketar, Nor Aiza and Kamalrudin, Massila and Sidek, Safiah and Robinson, Mark and Grundy, John},
booktitle = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
doi = {10.1145/2970276.2970295},
isbn = {9781450338455},
keywords = {Abstract test,Communication and collaboration,Essential Use Cases,Essential User Interface,Requirement-based testing,Requirements validation},
month = {aug},
pages = {864--869},
publisher = {Association for Computing Machinery, Inc},
title = {{An automated collaborative requirements engineering tool for better validation of requirements}},
url = {http://dl.acm.org/citation.cfm?doid=2970276.2970295},
year = {2016}
}


@article{Aranda2016,
abstract = {Context. Requirements elicitation is a highly communicative activity in which human interactions play a critical role. A number of analyst characteristics or skills may influence elicitation process effectiveness. Aim. Study the influence of analyst problem domain knowledge on elicitation effectiveness. Method. We executed a controlled experiment with post-graduate students. The experimental task was to elicit requirements using open interview and consolidate the elicited information immediately afterwards. We used four different problem domains about which students had different levels of knowledge. Two tasks were used in the experiment, whereas the other two were used in an internal replication of the experiment; that is, we repeated the experiment with the same subjects but with different domains. Results. Analyst problem domain knowledge has a small but statistically significant effect on the effectiveness of the requirements elicitation activity. The interviewee has a big positive and significant influence, as does general training in requirements activities and interview experience. Conclusion. During early contacts with the customer, a key factor is the interviewee; however, training in tasks related to requirements elicitation and knowledge of the problem domain helps requirements analysts to be more effective.},
author = {Aranda, Alejandrina M. and Dieste, Oscar and Juristo, Natalia},
doi = {10.1109/TSE.2015.2494588},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Controlled experiment,domain knowledge,internal replication,requirements elicitation},
month = {may},
number = {5},
pages = {427--451},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Effect of Domain Knowledge on Elicitation Effectiveness: An Internally Replicated Controlled Experiment}},
url = {http://ieeexplore.ieee.org/document/7307191/},
volume = {42},
year = {2016}
}

@inproceedings{Shah2017,
abstract = {Software requirements gathering from users, customers, and stakeholders is the very first and critical step in software development. Requirements are volatile due to change in needs, processes and technology. This makes manual requirement management a challenging task. To overcome such problems, practitioners developed various tools to collect and manage software requirements. Use of these tools can safe efforts and time and remove inconsistencies. In this study, we evaluated different tools which are used to manage and gather requirements during the whole life-cycle of software development or in a particular phase, which includes requirements elicitation, analysis, specification, verification, traceability, document support, graphical representation, and tool integration. Tools are analyzed according to functionality, scope, performance and availability.},
author = {Shah, Atif and Alasow, Mohamed Ali and Sajjad, Faisal and Baig, Jawad Javed Akbar},
booktitle = {2017 IEEE 8th International Conference on Intelligent Computing and Information Systems, ICICIS 2017},
doi = {10.1109/INTELCIS.2017.8260075},
isbn = {9772371723},
keywords = {requirements tools,software requirements engineering,software requirements management,software tools},
month = {jul},
pages = {278--283},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{An evaluation of software requirements tools}},
url = {http://ieeexplore.ieee.org/document/8260075/},
volume = {2018-January},
year = {2017}
}


@article{Pacheco2018,
abstract = {Requirements elicitation is a critical activity that forms part of the requirements engineering process because it has to discover what the software must do through a solid understanding of the wishes and needs of the various stakeholders and to transform them into software requirements. However, in spite of its relevance, there are only a few systematic literature reviews that provide scientific evidence about the effectiveness of the techniques used to elicit software requirements. This study presents a systematic review of relevant literature on requirements elicitation techniques, from 1993 to 2015, by addressing two research questions: Which mature techniques are currently used for eliciting software requirements? and Which mature techniques improve the elicitation effectiveness? Prior literature assumes that such 'maturity' leads to a better-quality understanding of stakeholders' desires and needs, and thus an increased likelihood that a resulting software will satisfy those requirements. This research paper found 140 studies to answer these questions. The findings describe which elicitation techniques are effective and in which situations they work best, taking into account the product which must be developed, the stakeholders' characteristics, the type of information obtained, among other factors.},
author = {Pacheco, Carla and Garcia, Ivan and Reyes, Miryam},
doi = {10.1049/iet-sen.2017.0144},
issn = {17518806},
journal = {IET Software},
month = {aug},
number = {4},
pages = {365--378},
publisher = {Institution of Engineering and Technology},
title = {{Requirements elicitation Techniques: A systematic literature review based on the maturity of the techniques}},
url = {https://digital-library.theiet.org/content/journals/10.1049/iet-sen.2017.0144},
volume = {12},
year = {2018}
}


@inproceedings{Hussain2016,
abstract = {Web application developers face problem whenever they gather requirements from users. Most of the developers use requirements elicitation techniques such as interviews, surveys but at the end of the day when developers develop application, the requirements are not met. The main goal of this study is to overcome the problem of requirement elicitation technique for web application using a combination of interview and Joint Application Development technique between developers and users. This technique will improve the requirement elicitation process and help developers and users to clearly define their requirements in web based application. We also anticipate this technique will decrease the time spent to develop a web application by using this combined technique.},
author = {Hussain, Zaiyana Mohamed and Sumari, Putra},
booktitle = {International Conference on Electronics, Information, and Communications, ICEIC 2016},
doi = {10.1109/ELINFOCOM.2016.7562976},
isbn = {9781467380164},
keywords = {Requirements elicitation,technique,web applications},
month = {sep},
pages = {1--4},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{WERT technique in requirements elicitation for web applications}},
url = {http://ieeexplore.ieee.org/document/7562976/},
year = {2016}
}





%CESAR

@article{Sultan2016,
abstract = {Requirements elicitation and requirements analysis are important practices of Requirements Engineering. Elicitation techniques, such as interviews and questionnaires, rely on formulating interrogative questions and asking these in a proper order to maximize the accuracy of the information being gathered. Information gathered during requirements elicitation then has to be interpreted, analyzed, and validated. Requirements analysis involves analyzing the problem and solutions spaces. In this paper, we describe a method to formulate interrogative questions for effective requirements elicitation based on the lexical and semantic principles of the English language interrogatives, and propose a pattern to organize stakeholder viewpoint concerns for better requirements analysis. This helps requirements engineer thoroughly describe problem and solutions spaces. Most of the previous requirements elicitation studies included six out of the seven English language interrogatives 'what', 'where', 'when', 'who', 'why', and 'how' (denoted by W5H) and did not propose any order in the interrogatives. We show that extending the set of six interrogatives with 'which' (denoted by W6H) improves the generation and formulation of questions for requirements elicitation and facilitates better requirements analysis via arranging stakeholder views. We discuss the interdependencies among interrogatives (for requirements engineer to consider while eliciting the requirements) and suggest an order for the set of W6H interrogatives. The proposed W6H-based reusable pattern also aids requirements engineer in organizing viewpoint concerns of stakeholders, making this pattern an effective tool for requirements analysis.},
author = {Sultan, Mujahid and Miranskyy, Andriy},
doi = {10.1109/RePa.2015.7407731},
file = {:C$\backslash$:/Users/cesar/Downloads/Ordering{\_}Interrogative{\_}Questions{\_}for{\_}Eff.pdf:pdf},
isbn = {9781509001224},
journal = {5th International Workshop on Requirements Patterns, RePa 2015 - Proceedings},
keywords = {English language interrogatives,Requirements Analysis,Requirements Elicitation,Viewpoints,W6H Pattern},
pages = {1--8},
title = {{Ordering interrogative questions for effective requirements engineering: The W6H pattern}},
year = {2016}
}
@inproceedings{Atukorala2016,
abstract = {In this paper we present a new human-centered requirements elicitation methodology that effectively considers end-user's desire, behavioral and environmental contexts. We follow a methodology that uses a computationally rich definition of situation as a 3-tuple {\textless}d, A, E{\textgreater} where d denotes human desire, A denotes the action vector, and E denotes the environment context vector. The proposed method of human-centered requirements elicitation is based on the situation - transition structure which is a directed weighted graph that represents transition from one situation to another. We illustrate the proposed methodology through some case studies with open access data sets. Requirements thus elicited appear to be valid after manual inspection. Future directions along this line of research are then asserted.},
author = {Atukorala, Nimanthi L. and Chang, Carl K. and Oyama, Katsunori},
booktitle = {Proceedings - International Computer Software and Applications Conference},
doi = {10.1109/COMPSAC.2016.191},
isbn = {9781467388450},
issn = {07303157},
keywords = {human desire,human-centered,requirements,situation,situationtransition},
month = {aug},
pages = {233--238},
publisher = {IEEE Computer Society},
title = {{Situation-Oriented Requirements Elicitation}},
url = {http://ieeexplore.ieee.org/document/7552014/},
volume = {1},
year = {2016}
}
@inproceedings{ShakeriHosseinAbad2018,
abstract = {Requirements elicitation requires extensive knowledge and deep understanding of the problem domain where the final system will be situated. However, in many software development projects, analysts are required to elicit the requirements from an unfamiliar domain, which often causes communication barriers between analysts and stakeholders. In this paper, we propose a requirements ELICitation Aid tool (ELICA) to help analysts better understand the target application domain by dynamic extraction and labeling of requirements-relevant knowledge. To extract the relevant terms, we leverage the flexibility and power of Weighted Finite State Transducers (WFSTs) in dynamic modeling of natural language processing tasks. In addition to the information conveyed through text, ELICA captures and processes non-linguistic information about the intention of speakers such as their confidence level, analytical tone, and emotions. The extracted information is made available to the analysts as a set of labeled snippets with highlighted relevant terms which can also be exported as an artifact of the Requirements Engineering (RE) process. The application and usefulness of ELICA are demonstrated through a case study. This study shows how pre-existing relevant information about the application domain and the information captured during an elicitation meeting, such as the conversation and stakeholders' intentions, can be captured and used to support analysts achieving their tasks.},
archivePrefix = {arXiv},
arxivId = {1808.05857},
author = {{Shakeri Hossein Abad}, Zahra and Gervasi, Vincenzo and Zowghi, Didar and Barker, Ken},
booktitle = {Proceedings - 2018 5th International Workshop on Artificial Intelligence for Requirements Engineering, AIRE 2018},
doi = {10.1109/AIRE.2018.00007},
eprint = {1808.05857},
isbn = {9781538684047},
keywords = {Dynamic information extraction,Natural language processing,Requirements elicitation,Tool support},
month = {oct},
pages = {8--14},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{ELICA: An Automated Tool for Dynamic Extraction of Requirements Relevant Information}},
url = {https://ieeexplore.ieee.org/document/8501304/},
year = {2018}
}
@inproceedings{Ahmed2018,
abstract = {Requirements specification in requirements engineering phase of SDLC has a great influence on the overall development of a software project. There is a huge amount of knowledge created and communicated during the entire process that needs to be managed in a structured manner incorporating both explicit and tacit knowledge. There is a lot of difficulty in documenting the tacit knowledge and consequently misunderstood or ambiguous stakeholder needs have aroused the researchers to devise techniques and models to minimize these difficulties. Due to the complexity of new arising systems, it has become difficult to understand the needs of stakeholders properly even with using the traditional models. Therefore, there is still not a widely accepted solution to all the problems faced in managing requirements. This paper presents a review and a state-of-the-art of previous approaches to managing knowledge in requirements engineering and also proposes a need for a better generic model.},
author = {Ahmed, Usman},
booktitle = {2018 International Conference on Engineering and Emerging Technologies, ICEET 2018},
doi = {10.1109/ICEET1.2018.8338650},
isbn = {9781538621707},
keywords = {Explicit Knowledge,Knowledge Management,Requirements Elicitation,Requirements Engineering,Tacit Knowledge},
month = {apr},
pages = {1--5},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{A review on knowledge management in requirements engineering}},
url = {http://ieeexplore.ieee.org/document/8338650/},
volume = {2018-January},
year = {2018}
}
@article{Shah2015,
abstract = {Requirements Engineering is one of the most vital activities in the entire Software Development Life Cycle. The success of the software is largely dependent on how well the users' requirements have been understood and converted into appropriate functionalities in the software. Typically, the users convey their requirements in natural language statements that initially appear easy to state. However, being stated in natural language, the statement of requirements often tends to suffer from misinterpretations and imprecise inferences. As a result, the requirements specified thus, may lead to ambiguities in the software specifications. One can indeed find numerous approaches that deal with ensuring precise requirement specifications. Naturally, an obvious approach to deal with ambiguities in natural language software specifications is to eliminate ambiguities altogether i.e. to use formal specifications. However, the formal methods have been observed to be cost-effective largely for the development of mission-critical software. Due to the technical sophistication required, these are yet to be accepted in the mainstream. Hence, the other alternative is to let the ambiguities exist in the natural language requirements but deal with the same using proven techniques viz. using approaches based on machine learning, knowledge and ontology to resolve them. One can indeed find numerous automated and semi-automated tools to resolve specific types of natural language software requirement ambiguities. However, to the best of our knowledge there is no published literature that attempts to compare and contrast the prevalent approaches to deal with ambiguities in natural language software requirements. Hence, in this paper, we attempt to survey and analyze the prevalent approaches that attempt to resolve ambiguities in natural language software requirements. We focus on presenting a state-of-the-art survey of the currently available tools for ambiguity resolution. The objective of this paper is to disseminate, dissect and analyze the research work published in the area, identify metrics for a comparative evaluation and eventually do the same. At the end, we identify open research issues with an aim to spark new interests and developments in this field.},
author = {Shah, Unnati S. and Jinwala, Devesh C.},
doi = {10.1145/2815021.2815032},
issn = {0163-5948},
journal = {ACM SIGSOFT Software Engineering Notes},
month = {sep},
number = {5},
pages = {1--7},
publisher = {Association for Computing Machinery (ACM)},
title = {{Resolving Ambiguities in Natural Language Software Requirements}},
url = {https://dl.acm.org/doi/10.1145/2815021.2815032},
volume = {40},
year = {2015}
}
@inproceedings{Borges2018,
abstract = {The1 growth of social networks impacts on several areas of our society. They can be used during software development, more specifically in the requirements elicitation activity, for identifying, complementing and validating the domain requirements. In this paper, we propose an approach that shows how social networks can be used as a source for capturing domain requirements. The aim is to perform the initial modeling of the system domain, providing a systematic methodology (process) for rapidly capturing relevant features that would not be straightforwardly elicited using traditional approaches. We apply this approach to the emergency systems domain (more specifically, floods in coastal areas), extracting information from the Twitter social network. The result is a domain model whose features can be reused in several applications of that domain. The application of the approach has been evaluated for its usefulness by domain experts and replicated to verify the generation of similar results at different time periods.},
address = {New York, New York, USA},
author = {Borges, Cl{\'{a}}udio and Ara{\'{u}}jo, Jo{\~{a}}o and Rodrigues, Armanda},
booktitle = {Proceedings of the ACM Symposium on Applied Computing},
doi = {10.1145/3167132.3167321},
isbn = {9781450351911},
keywords = {Domain model,Emergency systems,Feature model,Requirements elicitation,Social networks},
month = {apr},
pages = {1772--1781},
publisher = {Association for Computing Machinery},
title = {{Towards an approach to elicit domain requirements from social networks: The case of emergency systems}},
url = {http://dl.acm.org/citation.cfm?doid=3167132.3167321},
year = {2018}
}
@inproceedings{Rietz2019,
abstract = {[Context] Digital transformation impacts an ever-increasing amount of everyone's business and private life. It is imperative to incorporate user requirements in the development process to design successful information systems (IS). Hence, requirements elicitation (RE) is increasingly performed by users that are novices at contributing requirements to IS development projects. [Objective] We need to develop RE systems that are capable of assisting a wide audience of users in communicating their needs and requirements. Prominent methods, such as elicitation interviews, are challenging to apply in such a context, as time and location constraints limit potential audiences. [Research Method] We present the prototypical self-elicitation system 'LadderBot'. A conversational agent (CA) enables end-users to articulate needs and requirements on the grounds of the laddering method. The CA mimics a human (expert) interviewer's capability to rephrase questions and provide assistance in the process. An experimental study is proposed to evaluate LadderBot against an established questionnaire-based laddering approach. [Contribution] This work-in-progress introduces the chatbot LadderBot as a tool to guide novice users during requirements self-elicitation using the laddering technique. Furthermore, we present the design of an experimental study and outline the next steps and a vision for the future.},
author = {Rietz, Tim and Maedche, Alexander},
booktitle = {Proceedings of the IEEE International Conference on Requirements Engineering},
doi = {10.1109/RE.2019.00045},
isbn = {9781728139128},
issn = {23326441},
keywords = {Conversational Agent,Laddering,Requirements Elicitation,Self-Elicitation,User,Wide Audience},
month = {sep},
pages = {357--362},
publisher = {IEEE Computer Society},
title = {{LadderBot: A requirements self-elicitation system}},
url = {https://ieeexplore.ieee.org/document/8920593/},
volume = {2019-September},
year = {2019}
}
@inproceedings{Ghasemi2018,
abstract = {Process Mining is an approach that uses event logs of systems or processes and turns them into valuable insights. The main characteristic of process mining techniques is that they focus on and exploit "real behavior" of a large number of stakeholders of a system or of a process. On the other hand, requirements engineering is concerned with requirements elicitation and analysis not only in terms of software specifications but also in terms of activities carried out within an organizational and social context. Furthermore, involving a large number of users/stakeholders has always been a challenge with traditional requirements engineering methods. Although both requirements engineering and process mining have gained increasing research attention, the synergy between these two domains is yet to be exploited. Such a synergy can help both domains benefit from their capabilities and mitigate their own challenges. The ability of process mining to exploit huge data logs can help requirements engineers cope with the above challenge. This paper aims to highlight how requirements engineering can benefit from process mining's components such as execution logs, process discovery and conformance techniques for requirements elicitation, prioritization and validation.},
author = {Ghasemi, Mahdi},
booktitle = {Proceedings - 2018 1st International Workshop on Learning from other Disciplines for Requirements Engineering, D4RE 2018},
doi = {10.1109/D4RE.2018.00008},
isbn = {9781538684184},
keywords = {Data-Driven,Event Logs,Goal Mining,Goal Modeling,Process Mining,Requirements Engineering},
month = {dec},
pages = {8--11},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{What requirements engineering can learn from process mining}},
url = {https://ieeexplore.ieee.org/document/8595126/},
year = {2018}
}
@article{Dar2018,
abstract = {Software Requirements Engineering has paved its roots in both industry and academia, as today's complex systems are programmed to provide efficient user-centric functionalities. This also refers to the emergence of challenges in Requirements Elicitation techniques, approaches, and tools while performing them. Particularly, in the area of Requirements Engineering for software development, a number of techniques and approaches have been observed in literature but for mobile application development, which is different from the traditional software development, has not been discussed much in past studies. Short development cycle, device limitations, and less development time for mobile application development are some of the issues to which there is no 'silver bullet' available. Therefore, the Requirement Analysts are in dire need of defined guidelines for Requirement Elicitation in mobile application development. With this study, we aim to provide a detailed overview of Requirements Elicitation techniques and its challenges. We have conducted a systematic literature review by surveying 4507 initial and 36 primary studies. A comprehensive set of 22 elicitation techniques were measured based on quality assessment criteria, including time and cost factors, resource effectiveness, and domain understanding. Furthermore, the challenges in Requirements Elicitation were also grouped into eight different categories based on their applicability. Our study effectively contributes in highlighting Software Requirements Elicitation Techniques and its challenges in mobile application development.},
author = {Dar, Hafsa and Lali, M. Ikramullah and Ashraf, Humaira and Ramzan, Muhammad and Amjad, Tehmina and Shahzad, Basit},
doi = {10.1109/ACCESS.2018.2874981},
issn = {21693536},
journal = {IEEE Access},
keywords = {Android application,Requirement elicitation,Requirement gathering,Requirements engineering,Software development life cycle,Software engineering},
pages = {63859--63867},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{A systematic study on software requirements elicitation techniques and its challenges in mobile application development}},
url = {https://ieeexplore.ieee.org/document/8513829/},
volume = {6},
year = {2018}
}
@inproceedings{Banz2019,
abstract = {Digitalization is progressing at a rapid pace worldwide. This also has a direct impact on Netcloud and its customers. In order to provide services faster and more flexible, automation tools and cloud solutions are used to support the IT. The company Net-cloud has, therefore, set up a selected team that mainly takes care of automation projects for customers and supports them in their implementation. Since these projects are always new, resource-intensive and innovative, the planning and implementation of automation projects are very demanding. This leads to problems and challenges in requirements engineering. An extensive literature review has shown that there are numer-ous cloud computing frameworks and methods, but none that take the view of the service provider and consider the implemen-tation respectively. This paper closes this gap by developing a new requirements engineering methodology for automation and cloud projects. After an evaluation, the most suitable requirements elicitation techniques were combined in an iterative method. This method is characterized by the fact that the iterations and the mix of elicita-tion techniques (i.e. interview, workshop, survey and reuse) re-peatedly check the requirements for being up-to-date, complete, and feasible. This allows a step-by-step approach for the devel-opment of the desired product or service.},
author = {Banz, Andreas},
booktitle = {Proceedings of the IEEE International Conference on Requirements Engineering},
doi = {10.1109/RE.2019.00037},
isbn = {9781728139128},
issn = {23326441},
keywords = {Automation,Cloud computing,Requirements,Requirements elicitation},
month = {sep},
pages = {276--285},
publisher = {IEEE Computer Society},
title = {{Requirements engineering method for infrastructure automation and cloud projects}},
url = {https://ieeexplore.ieee.org/document/8920425/},
volume = {2019-Septe},
year = {2019}
}

%BIBLIOGRAFIA DE DOCS PROPIOS DE LA PLANTILLA APORTADA POR EL DOCENTE

@article{Brereton2007,
abstract = {A consequence of the growing number of empirical studies in software engineering is the need to adopt systematic approaches to assessing and aggregating research outcomes in order to provide a balanced and objective summary of research evidence for a particular topic. The paper reports experiences with applying one such approach, the practice of systematic literature review, to the published studies relevant to topics within the software engineering domain. The systematic literature review process is summarised, a number of reviews being undertaken by the authors and others are described and some lessons about the applicability of this practice to software engineering are extracted. The basic systematic literature review process seems appropriate to software engineering and the preparation and validation of a review protocol in advance of a review activity is especially valuable. The paper highlights areas where some adaptation of the process to accommodate the domain-specific characteristics of software engineering is needed as well as areas where improvements to current software engineering infrastructure and practices would enhance its applicability. In particular, infrastructure support provided by software engineering indexing databases is inadequate. Also, the quality of abstracts is poor; it is usually not possible to judge the relevance of a study from a review of the abstract alone. {\textcopyright} 2006 Elsevier Inc. All rights reserved.},
author = {Brereton, Pearl and Kitchenham, Barbara A. and Budgen, David and Turner, Mark and Khalil, Mohamed},
doi = {10.1016/j.jss.2006.07.009},
file = {::},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Empirical software engineering,Systematic literature review},
month = {apr},
number = {4},
pages = {571--583},
title = {{Lessons from applying the systematic literature review process within the software engineering domain}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S016412120600197X},
volume = {80},
year = {2007}
}


@article{Kitchenham2011,
abstract = {Context: We are strong advocates of evidence-based software engineering (EBSE) in general and systematic literature reviews (SLRs) in particular. We believe it is essential that the SLR methodology is used constructively to support software engineering research. Objective: This study aims to assess the value of mapping studies which are a form of SLR that aims to identify and categorise the available research on a broad software engineering topic. Method: We used a multi-case, participant-observer case study using five examples of studies that were based on preceding mapping studies. We also validated our results by contacting two other researchers who had undertaken studies based on preceding mapping studies and by assessing review comments related to our follow-on studies. Results: Our original case study identified 11 unique benefits that can accrue from basing research on a preceding mapping study of which only two were case specific. We also identified nine problems associated with using preceding mapping studies of which two were case specific. These results were consistent with the information obtained from the validation activities. We did not find an example of an independent research group making use of a mapping study produced by other researchers. Conclusion: Mapping studies can save time and effort for researchers and provide baselines to assist new research efforts. However, they must be of high quality in terms of completeness and rigour if they are to be a reliable basis for follow-on research. {\textcopyright} 2010 Elsevier B.V. All rights reserved.},
author = {Kitchenham, Barbara A. and Budgen, David and {Pearl Brereton}, O.},
doi = {10.1016/j.infsof.2010.12.011},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Case study,Mapping studies,Software engineering,Systematic literature review},
month = {jun},
number = {6},
pages = {638--651},
title = {{Using mapping studies as the basis for further research - A participant-observer case study}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0950584910002272},
volume = {53},
year = {2011}
}


@techreport{Petticrew,
author = {Petticrew, Mark and Roberts, Helen},
file = {::},
title = {{Systematic Reviews in the Social Sciences A PRACTICAL GUIDE}}
}


@article{Neiva2016,
abstract = {Context: Many researchers have argued that providing interoperability support only considering the format and meaning (i.e. syntax and semantic) of data exchange is not enough to achieve complete, effective and meaningful collaboration. Pragmatic interoperability has been highlighted as a key requirement to enhance collaboration. However, fulfilling this requirement is not a trivial task and there is a lack of works discussing solutions to achieve this level of interoperability. Objectives: The aim of this study is to present a systematic review and mapping of the literature in order to identify, analyse and classify the published solutions to achieve pragmatic interoperability. Method: To conduct a systematic review and mapping in accordance with the guidelines proposed in the evidence-based software engineering literature. Results: Our study identified 13 papers reporting pragmatic interoperability computational solutions. The first paper in our set of selected papers was published in 2004; the main strategies used to address pragmatic interoperability issues were service discovery, composition and/or selection and ontologies. The application domain of the identified solutions was mainly e-business. In addition, most of the identified solutions were software architectures. Conclusion: Mature proposals addressing pragmatic interoperability are still rare in the literature. Although many works have discussed the importance of pragmatic interoperability, it is necessary that researchers report solutions that implement and evaluate pragmatic interoperability in order to make progress in this area.},
author = {Neiva, Fr{\^{a}}ncila Weidt and David, Jos{\'{e}} Maria N. and Braga, Regina and Campos, Fernanda},
doi = {10.1016/j.infsof.2015.12.013},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Collaboration,Collaborative systems,Groupware,Interoperability,Pragmatic interoperability},
month = {apr},
pages = {137--150},
publisher = {Elsevier},
title = {{Towards pragmatic interoperability to support collaboration: A systematic review and mapping of the literature}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0950584916000021},
volume = {72},
year = {2016}
}


@misc{Hydara2015,
abstract = {Context: Cross-site scripting (XSS) is a security vulnerability that affects web applications. It occurs due to improper or lack of sanitization of user inputs. The security vulnerability caused many problems for users and server applications. Objective: To conduct a systematic literature review on the studies done on XSS vulnerabilities and attacks. Method: We followed the standard guidelines for systematic literature review as documented by Barbara Kitchenham and reviewed a total of 115 studies related to cross-site scripting from various journals and conference proceedings. Results: Research on XSS is still very active with publications across many conference proceedings and journals. Attack prevention and vulnerability detection are the areas focused on by most of the studies. Dynamic analysis techniques form the majority among the solutions proposed by the various studies. The type of XSS addressed the most is reflected XSS. Conclusion: XSS still remains a big problem for web applications, despite the bulk of solutions provided so far. There is no single solution that can effectively mitigate XSS attacks. More research is needed in the area of vulnerability removal from the source code of the applications before deployment.},
author = {Hydara, Isatou and Sultan, Abu Bakar Md and Zulzalil, Hazura and Admodisastro, Novia},
booktitle = {Information and Software Technology},
doi = {10.1016/j.infsof.2014.07.010},
issn = {09505849},
keywords = {Cross-site scripting,Security,Systematic literature review,Web applications},
month = {feb},
pages = {170--186},
publisher = {Elsevier},
title = {{Current state of research on cross-site scripting (XSS) - A systematic literature review}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0950584914001700},
volume = {58},
year = {2015}
}



@inproceedings{Suranto2015,
abstract = {Requirements engineering is the first and one of the most important stage in a software development process. The first step in requirements engineering is requirements elicitation and analysis where the software engineers gather, elicit and analyze the system requirements with the help from the stakeholders of the intended system. This step then followed by requirements validation which is aimed to validate whether the defined requirements actually represent a system with the services that the stakeholders want. This paper discuss about strategy for enhancing the quality of the requirements engineering process by using software prototypes. This strategy was enacted in a software project which was developing Student Marking System (SMS) in University XYZ. This paper will explain about how software engineers in the project combining low-fidelity and high-fidelity prototypes during the requirements engineering process.},
author = {Suranto, Beni},
booktitle = {2nd International Symposium on Technology Management and Emerging Technologies, ISTMET 2015 - Proceeding},
doi = {10.1109/ISTMET.2015.7359019},
isbn = {9781479917235},
keywords = {fidelity,requirements engineering,software prototypes},
month = {dec},
pages = {148--153},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Software prototypes: Enhancing the quality of requirements engineering process}},
year = {2015}
}
